name: 'action-clang-tidy'
description: 'GitHub Action for clang-tidy'

inputs:
  github_token:
    description: 'GitHub token'
    default: '${{ github.token }}'
  version:
    description: 'Clang version used for testing'
    default: '17'
  workdir:
    description: 'Working directory'
    default: '.'
  builddir:
    description: 'Build directory'
    default: './build'
  tool_name:
    description: 'Tool name display reported in the Pull Request comment'
    default: 'clang-tidy'
  level:
    description: 'Reported level [info,warning,error]'
    default: 'warning'
  reporter:
    description: |
      Reporter of reviewdog command [github-pr-check,github-pr-review,github-check].
      Default is github-pr-check.
      github-pr-review can use Markdown and add a link to rule page in reviewdog reports.
    default: 'github-pr-check'
  filter_mode:
    description: 'reviewdog filter_mode'
    default: 'nofilter'
  fail_on_error:
    description: 'exit code for reviewdog on error'
    default: 'true'
  reviewdog_flags:
    description: 'extra reviewdog option'
    default: ''

runs:
  using: "composite"
  steps:
    # Env setup
    - uses: Swatinem/rust-cache@v2

    - name: Install clang-tidy-sarif converter
      shell: bash
      run: |
        curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
        cargo binstall -y clang-tidy-sarif sarif-fmt

    - name: install reviewdog
      uses: reviewdog/action-setup@v1.1.0

    # - uses: actions-rs/toolchain@v1
    #   with:
    #     profile: minimal
    #     toolchain: stable
    #     override: true

    # - name: Install python
    #   uses: actions/setup-python@v5
    #   id: setup-python
    #   with:
    #     python-version: '3.11'
    #     update-environment: false

    # Install tools

    - name: Install Linux clang dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        ::group::install-clang
        sudo apt-get update
        # First try installing from default Ubuntu repositories before trying LLVM script
        if ! sudo apt-get install -y clang-tidy-${{ inputs.version }}; then
          # This LLVM script will add the relevant LLVM PPA: https://apt.llvm.org/
          wget https://apt.llvm.org/llvm.sh -O $GITHUB_ACTION_PATH/llvm_install.sh
          chmod +x $GITHUB_ACTION_PATH/llvm_install.sh
          if sudo $GITHUB_ACTION_PATH/llvm_install.sh ${{ inputs.version }}; then
            sudo apt-get install -y clang-tidy-${{ inputs.version }}
          fi
        fi
        ::endgroup::

    # - name: install clang-tidy
    #   shell: bash
    #   run: sudo apt-get install -y clang-tidy-17

    # - name: Setup python venv (Unix)
    #   if: runner.os == 'Linux' || runner.os == 'macOS'
    #   shell: bash
    #   run: |
    #     ${{ steps.setup-python.outputs.python-path }} -m venv "$GITHUB_ACTION_PATH/venv"
    #     source "$GITHUB_ACTION_PATH/venv/bin/activate"
    #     pip install -r "$GITHUB_ACTION_PATH/requirements.txt"
    #     clang-tools -i ${{ inputs.version }} -b

    # Execute

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v42
      with:
        files: |
          **.c
          **.cpp
          **.h
          **.hpp

    - name: Run clang-tidy
      shell: bash
      working-directory: ${{ inputs.workdir }}
      continue-on-error: true
      run: |
        clang-tidy -p ${{ inputs.builddir }} -warnings-as-errors=* ${{ steps.changed-files.outputs.all_changed_files }} -- > results.txt

    - name: Convert clang-tidy report to sarif
      shell: bash
      if: ${{ always() }}
      working-directory: ${{ inputs.workdir }}
      run: |
        cat results.txt
        cat results.txt | tee clang_tidy.sarif | sarif-fmt
        cat clang_tidy.sarif

    # - name: Upload SARIF file
    #   uses: github/codeql-action/upload-sarif@v1
    #   with:
    #     sarif_file: results.sarif

    # - name: Run clang-tidy
    #   continue-on-error: true
    #   shell: bash
    #   working-directory: ${{ inputs.workdir }}
    #   run: |
    #     run-clang-tidy-17 \
    #       | sed "s|$(pwd)/||g" > clang_tidy_raw.log

    # - name: Remove clang-tidy duplicate error
    #   shell: bash
    #   run: |
    #     python ${{ github.action_path }}/remove_duplicate_error.py ${{ inputs.workdir }}/clang_tidy_raw.log "clang-tidy" \
    #       | tee ${{ inputs.workdir }}/clang_tidy.log

    - name: reviewdog
      shell: bash
      if: ${{ always() }}
      working-directory: ${{ inputs.workdir }}
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ inputs.github_token }}
      run: |
        reviewdog \
          -name "${{ inputs.tool_name }}" \
          -level "${{ inputs.level }}" \
          -fail-on-error="${{ inputs.fail_on_error }}" \
          -filter-mode="${{ inputs.filter_mode }}" \
          -diff="git diff FETCH_HEAD" \
          -reporter="${{ inputs.reporter }}" \
          -f=sarif \
          ${{ inputs.reviewdog_flags }} \
          < ./clang_tidy.sarif

          # -efm="%-Gclang-tidy%s" \
          # -efm="%-GError while processing%s" \
          # -efm="%W%f:%l:%c: warning: %m" \
          # -efm="%E%f:%l:%c: error: %m" \
          # -efm="%C%m" \